<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2012-2015 Tresys Technology, LLC. All rights reserved.
   
    Developed by: Tresys Technology, LLC
                  http://www.tresys.com
    
    Permission is hereby granted, free of charge, to any person obtaining a copy of
    this software and associated documentation files (the "Software"), to deal with
    the Software without restriction, including without limitation the rights to
    use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
    of the Software, and to permit persons to whom the Software is furnished to do
    so, subject to the following conditions:
    
     1. Redistributions of source code must retain the above copyright notice,
        this list of conditions and the following disclaimers.
    
     2. Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimers in the
        documentation and/or other materials provided with the distribution.
    
     3. Neither the names of Tresys Technology, nor the names of its contributors
        may be used to endorse or promote products derived from this Software
        without specific prior written permission.
    
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE
    SOFTWARE.
-->
<tdml:testSuite xmlns:tdml="http://www.ibm.com/xmlns/dfdl/testData"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dfdl="http://www.ogf.org/dfdl/dfdl-1.0/"
  xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ex="http://example.com" xmlns:tns="http://example.com"
  xmlns:fn="http://www.w3.org/2005/xpath-functions" >

  <tdml:defineSchema name="ContentFramingProperties-Embedded.dfdl.xsd">


    <dfdl:format ref="ex:daffodilTest1" lengthKind="delimited"
      lengthUnits="characters" encoding="UTF-8" />

    <xs:element name="CFP_01" type="tns:cfp_01" />
    <xs:simpleType name="cfp_01">
      <xs:annotation>
        <xs:appinfo source="http://www.ogf.org/dfdl/">
          <dfdl:simpleType lengthKind="explicit" length="3"
            encoding="UTF-16" byteOrder="bigEndian" />
        </xs:appinfo>
      </xs:annotation>
      <xs:restriction base="xs:string" />
    </xs:simpleType>
    
    <xs:element name="root">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="e1" type="xs:string" dfdl:lengthKind="explicit" dfdl:length="1"/>
          <xs:element name="e2" type="xs:string" dfdl:lengthKind="explicit" dfdl:length="1"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
    <xs:element name="root1">
      <xs:complexType>
        <xs:sequence>
          <xs:element name="e1" type="xs:string" dfdl:lengthKind="explicit"
            dfdl:length="5" />
          <xs:element name="e2" type="xs:string" dfdl:lengthKind="explicit"
            dfdl:length="1" dfdl:encoding="{ ../ex:e1 }"/>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
    
    <xs:element name="e3" type="xs:string" dfdl:lengthKind="explicit" dfdl:length="1" />

    <xs:element name="ee1" type="xs:string" dfdl:encodingErrorPolicy="replace" dfdl:encoding="ASCII"
    	dfdl:byteOrder="bigEndian"/>
    <xs:element name="ee2" type="xs:string" dfdl:encodingErrorPolicy="replace" dfdl:encoding="UTF-8"
    	dfdl:byteOrder="bigEndian"/>

  </tdml:defineSchema>

  <tdml:parserTestCase name="UTF_16_01" root="CFP_01"
    model="ContentFramingProperties-Embedded.dfdl.xsd" description="Section 11 encoding - DFDL-11-002R">

    <tdml:document>
      <tdml:documentPart type="byte">006300610074</tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <CFP_01>cat</CFP_01>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:parserTestCase name="encoding_property_expression" root="root1" model="ContentFramingProperties-Embedded.dfdl.xsd" 
    description="Use of DFDL expression for encoding property - DFDL-11-002R">
    <tdml:document>
      <tdml:documentPart type="text">UTF-8</tdml:documentPart>
      <tdml:documentPart type="byte">E5 B9 B4</tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <ex:root1>
          <e1>UTF-8</e1>
          <e2>å¹´</e2>
        </ex:root1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
 
  <tdml:parserTestCase name="xml_illegal_chars" root="root"
    model="ContentFramingProperties-Embedded.dfdl.xsd" description="Section 11 encoding is utf-8 - DFDL-11-002R">

    <tdml:document>
      <tdml:documentPart type="byte">000f</tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <root>
          <e1>&#57344;</e1>
          <e2>&#57359;</e2>
        </root>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <tdml:parserTestCase name="xml_illegal_chars_01" root="e3"
    model="ContentFramingProperties-Embedded.dfdl.xsd" description="Section 11 encoding is utf-8 - DFDL-11-002R">
    <tdml:document><tdml:documentPart replaceDFDLEntities="true" type="text">%#xFFFF;</tdml:documentPart></tdml:document>
    <!-- Note that we use an illegal codepoint above that is NOT a high surrogate or a low surrogate,
    but a character that is a valid codepoint for unicode, but not for XML.
    The problem is, if we use a surrogate (high or low), the decoder will not accept it so 
    we can't present it as a data character to the parser since we can't even get at it as text.
     --> 
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e3>&#xF0FF;</e3>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <tdml:parserTestCase name="xml_illegal_chars_02" root="e3"
    model="ContentFramingProperties-Embedded.dfdl.xsd" description="Section 11 encoding is utf-8 - DFDL-11-002R">
    <tdml:document><tdml:documentPart type="byte">efbfbf</tdml:documentPart></tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e3>&#61695;</e3>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
   
  <tdml:parserTestCase name="xml_utf8_4byte_chars" root="e3"
    model="ContentFramingProperties-Embedded.dfdl.xsd" description="Section 11 encoding is utf-8 - DFDL-11-002R">
    <tdml:document>&#x10000;</tdml:document>
    <!-- That's the minimum Unicode character value that takes 4 bytes to encode in utf-8 -->
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e3>&#x10000;</e3>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <tdml:parserTestCase name="xml_utf8_4byte_chars_01" root="e3"
    model="ContentFramingProperties-Embedded.dfdl.xsd" description="Section 11 encoding is utf-8 - DFDL-11-002R">
    <tdml:document><tdml:documentPart type="byte">f0 90 80 80</tdml:documentPart></tdml:document>
    <!-- That's the minimum Unicode character value that takes 4 bytes to encode in utf-8 -->
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e3>&#x10000;</e3>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:defineSchema name="packed7BitASCII">

    <dfdl:format ref="ex:daffodilTest1" encoding="US-ASCII-7-bit-packed"
      lengthUnits="characters"/>

    <xs:element name="e1" type="xs:string" dfdl:lengthKind="explicit"
      dfdl:length="2" />
    <xs:element name="e2" type="xs:string" dfdl:lengthKind="explicit"
      dfdl:length="64" />
    <xs:element name="e3" type="xs:string" dfdl:lengthKind="delimited"
      dfdl:terminator="," />

    <!-- USES proposed dfdl:string constructor to process the entities
      so that we can put %NUL; in an expression. -->
    <xs:element name="e4" type="ex:zString" />
    <xs:complexType name="zString">
      <xs:sequence>

        <xs:sequence>
          <!-- wants to be a hidden group. We want the name 's' as the public
            interface to this type, but the rep element invisible to users
            of the type. -->
          <xs:element name="rep" type="xs:string"
            dfdl:lengthKind="pattern" dfdl:lengthPattern="[^\x00]{0,3}\x00|[^\x00]{4}"
            dfdl:outputValueCalc="{ 
            if (fn:string-length(../ex:s) lt 4) 
            then fn:concat(../ex:s, dfdl:decodeDFDLEntities('%NUL;')) 
            else ../ex:s 
            }" />
        </xs:sequence>

        <xs:element name="s" type="xs:string"
          dfdl:inputValueCalc="{ 
               if ((fn:string-length(../ex:rep) eq 4) 
                    and fn:not(fn:ends-with(../ex:rep, dfdl:decodeDFDLEntities('%NUL;'))))
                    then ../ex:rep
               else fn:substring(../ex:rep, 1, fn:string-length(../ex:rep) - 1)
             }" />
      </xs:sequence>
    </xs:complexType>

    <!-- Similar, but delimiter is DEL (ascii 0x7F) -->
    <xs:element name="e5" type="ex:dString" />
    <xs:complexType name="dString">
      <xs:sequence>
        <xs:sequence>
          <!-- wants to be a hidden group. We want the name 's' as the public
            interface to this type, but the rep element invisible to users
            of the type. -->
          <xs:element name="rep" type="xs:string"
            dfdl:lengthKind="pattern" dfdl:lengthPattern="[^\x7F]{0,3}\x7F|[^\x7F]{4}"
            dfdl:outputValueCalc="{ 
            if (fn:string-length(../ex:s) lt 4) 
            then fn:concat(../ex:s, dfdl:decodeDFDLEntities('%DEL;')) 
            else ../ex:s 
            }" />
        </xs:sequence>

        <xs:element name="s" type="xs:string"
          dfdl:inputValueCalc="{ 
               if ((fn:string-length(../ex:rep) eq 4) 
                    and fn:not(fn:ends-with(../ex:rep, dfdl:decodeDFDLEntities('%DEL;'))))
                    then ../ex:rep
               else fn:substring(../ex:rep, 1, fn:string-length(../ex:rep) - 1)
             }" />
      </xs:sequence>
    </xs:complexType>

    <xs:element name="e6" type="xs:string" dfdl:lengthKind="delimited"
      dfdl:terminator="" dfdl:representation="text" dfdl:alignmentUnits="bits" dfdl:alignment="4" />
    
    <xs:element name="e7" type="xs:string" dfdl:lengthKind="delimited"
      dfdl:terminator="" dfdl:representation="text" dfdl:alignmentUnits="bits" dfdl:alignment="6" dfdl:leadingSkip="5"/>
    
    <xs:element name="e8" type="xs:string" dfdl:lengthKind="delimited"
      dfdl:terminator="" dfdl:representation="text" dfdl:alignmentUnits="bits" dfdl:alignment="1" />
    
    <xs:element name="e9" type="xs:string" dfdl:lengthKind="delimited"
      dfdl:terminator="" dfdl:representation="text" dfdl:alignmentUnits="bits" dfdl:alignment="2" dfdl:leadingSkip="1"/>
    
    <xs:element name="e10" type="xs:string" dfdl:lengthKind="delimited"
      dfdl:terminator="" dfdl:representation="text" dfdl:alignmentUnits="bits" dfdl:alignment="5" />

  </tdml:defineSchema>

  <!--
    Test name: packed7BitASCII1
    Schema: packed7BitASCII
    Purpose: This test demonstrates the simple use of the US-ASCII-7-bit-packed 
    encoding, where the document represents
    two US-ASCII-7-bit-packed characters in binary.
  -->

  <tdml:parserTestCase name="packed7BitASCII1" root="e1"
    model="packed7BitASCII">
    <tdml:document bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="RTL"><![CDATA[
       0110010 0110100
      ]]></tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e1>42</e1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: packed7BitASCII2
    Schema: packed7BitASCII
    Purpose: This test demonstrates the simple use of the US-ASCII-7-bit-packed 
    encoding, where the document represents
    64 US-ASCII-7-bit-packed characters in binary.
  -->

  <tdml:parserTestCase name="packed7BitASCII2" root="e2"
    model="packed7BitASCII">
    <tdml:document bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="RTL"><![CDATA[
      0110001 0110010 0110011 0110100 0110101 0110110 0110111 0111000 0111001 0110000
      0110001 0110010 0110011 0110100 0110101 0110110 0110111 0111000 0111001 0110000
      0110001 0110010 0110011 0110100 0110101 0110110 0110111 0111000 0111001 0110000
      0110001 0110010 0110011 0110100 0110101 0110110 0110111 0111000 0111001 0110000
      0110001 0110010 0110011 0110100 0110101 0110110 0110111 0111000 0111001 0110000
      0110001 0110010 0110011 0110100 0110101 0110110 0110111 0111000 0111001 0110000
      0110001 0110010 0110011 0110100 
      ]]></tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e2>4321098765432109876543210987654321098765432109876543210987654321</e2>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: packed7BitASCII3
    Schema: packed7BitASCII
    Purpose: This test demonstrates the simple use of the US-ASCII-7-bit-packed 
    encoding, where the document represents
    two US-ASCII-7-bit-packed characters in binary, one being the terminator 
    ","
  -->

  <tdml:parserTestCase name="packed7BitASCII3" root="e3"
    model="packed7BitASCII">
    <tdml:document  bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="RTL"><![CDATA[
      0101100 0110001  
      ]]></tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e3>1</e3>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: packed7BitASCII4
    Schema: packed7BitASCII
    Purpose: This test demonstrates a more complex use of the US-ASCII-7-bit-packed 
    encoding, where delimited by NUL, which is illegal in XML so is remapped to E000.
  -->

  <tdml:parserTestCase name="packed7BitASCII4" root="e4"
    model="packed7BitASCII">
    <tdml:document bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="RTL"><![CDATA[
       0000000 0110001 
      ]]></tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e4>
          <rep>1&#xE000;</rep> <!-- should be hidden once that feature is implemented. -->
          <s>1</s>
        </e4>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: packed7BitASCII5
    Schema: packed7BitASCII
    -->

  <tdml:parserTestCase name="packed7BitASCII5" root="e4"
    model="packed7BitASCII">
    <tdml:document bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="RTL"><![CDATA[
        0110011 0110011 0110100 0110001
      ]]></tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e4>
          <rep>1433</rep> <!-- should be hidden once that feature is implemented. -->
          <s>1433</s>
        </e4>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: packed7BitASCII6
    Schema: packed7BitASCII
    Purpose: This test demonstrates a more complex use of the US-ASCII-7-bit-packed.
    The NUL character, illegal in XML, is remapped into the private use area to E000. 
  -->

  <tdml:parserTestCase name="packed7BitASCII6" root="e4"
    model="packed7BitASCII">
    <tdml:document bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="RTL"><![CDATA[
      0000000 0110001 0110010 0110011 
      ]]></tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e4>
          <rep>321&#xE000;</rep> <!-- should be hidden once that feature is implemented. -->
          <s>321</s>
        </e4>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: packed7BitASCII7
    Schema: packed7BitASCII
    Purpose: This test demonstrates the use of lengthPatterns with packed7BitASCII. 
    The lengthPattern is
    0-3 occurrences of not a 0x7F, followed by a 0x7F, or 4 occurrence of not a 7F. 
  -->

  <tdml:parserTestCase name="packed7BitASCII7" root="e5"
    model="packed7BitASCII">
    <tdml:document bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="RTL"><![CDATA[
      0110001 0110010 0110011 0110100 
      ]]></tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e5>
          <rep>4321</rep> <!-- should be hidden once that feature is implemented. -->
          <s>4321</s>
        </e5>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: packed7BitASCII8
    Schema: packed7BitASCII
    Purpose: This test demonstrates the use of lengthPatterns with packed7BitASCII. 
    The lengthPattern is
    0-4 occurrences of not a 0x7F (11111111), followed by a 0x7F
  -->

  <tdml:parserTestCase name="packed7BitASCII8" root="e5"
    model="packed7BitASCII">
    <tdml:document bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="RTL"><![CDATA[
        1111111 0110001 0110010 0110011  
      ]]></tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e5>
          <rep>321&#x7F;</rep> <!-- should be hidden once that feature is implemented. -->
          <s>321</s>
        </e5> 
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: packed7BitASCII9
    Schema: packed7BitASCII
    Purpose: This test demonstrates the use of lengthPatterns with packed7BitASCII. 
    The lengthPattern is
    0-4 occurrences of not a 0x7F (11111111), followed by a 0x7F. In this 
    case there is more
    data than the length determined by the pattern.
  -->

  <tdml:parserTestCase name="packed7BitASCII9" root="e5"
    model="packed7BitASCII">
    <tdml:document bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="RTL"><![CDATA[
      0110001 0110010 0110011 1111111 01011010
      ]]></tdml:documentPart>
    </tdml:document>
    <tdml:errors>
      <tdml:error>Left over data</tdml:error>
    </tdml:errors>
  </tdml:parserTestCase>

  <!--
    Test name: alignmentPacked7BitASCII
    Schema: packed7BitASCII
    Purpose: This test demonstrates that the required alignment for 7-bit ASCII is 1 bit.
  -->

  <tdml:parserTestCase name="alignmentPacked7BitASCII" root="e6"
    model="packed7BitASCII">
    <tdml:document bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="RTL"><![CDATA[
      0110100 0110010
      ]]></tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e6>24</e6>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <!--
    Test name: alignmentPacked7BitASCII_02
    Schema: packed7BitASCII
    Purpose: This test demonstrates that the required alignment for 7-bit ASCII is any multiple of 1 bit.
  -->

  <tdml:parserTestCase name="alignmentPacked7BitASCII_02" root="e7"
    model="packed7BitASCII">
    <tdml:document bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="RTL">  0110010 0110100 01010</tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e7>42</e7>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
 
<!--
    Test name: alignmentPacked7BitASCII_03
    Schema: packed7BitASCII
    Purpose: This test demonstrates that the required alignment for 7-bit ASCII is 1 bit.
             Therefore, the alignment can be any multiple of 1 bit, meaning it can be any positive integer value.
  -->

  <tdml:parserTestCase name="alignmentPacked7BitASCII_03" root="e8"
    model="packed7BitASCII">
    <tdml:document bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="RTL"><![CDATA[0110010 0110100]]></tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e8>42</e8>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <!--
    Test name: alignmentPacked7BitASCII_04
    Schema: packed7BitASCII
    Purpose: This test demonstrates that the required alignment for 7-bit ASCII is 1 bit.
             Therefore, the alignment can be any multiple of 1 bit, meaning it can be any positive integer value.
  -->

  <tdml:parserTestCase name="alignmentPacked7BitASCII_04" root="e9"
    model="packed7BitASCII">
    <tdml:document bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="RTL"><![CDATA[ 0110100 0110010 11]]></tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e9>24</e9>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <!--
    Test name: alignmentPacked7BitASCII_05
    Schema: packed7BitASCII
    Purpose: This test demonstrates that the required alignment for 7-bit ASCII is 1 bit.
             Therefore, the alignment can be any multiple of 1 bit, meaning it can be any positive integer value.
  -->

  <tdml:parserTestCase name="alignmentPacked7BitASCII_05" root="e10"
    model="packed7BitASCII">
    <tdml:document bitOrder="LSBFirst">
      <tdml:documentPart type="bits" byteOrder="RTL"><![CDATA[0110100 0110010]]></tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
        <e10>24</e10>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <tdml:defineSchema name="iso-8859-1">
    <dfdl:format ref="daffodilTest1" representation="text" encoding="iso-8859-1"
      separator="/" byteOrder="bigEndian" ignoreCase="no" textNumberRep="standard"
      initiator="" initiatedContent="no" terminator="" />

    <xs:element name="e1" dfdl:lengthKind="delimited" type="xs:string" />
  </tdml:defineSchema>

  <!--
    Test name: encoding_iso-8859-1
    Schema: iso-8859-1
    Purpose: This test demonstrates that the byte 0xFF does not end data.
  -->
  <tdml:parserTestCase name="encoding_iso-8859-1" root="e1" model="iso-8859-1"
    description="">
    <tdml:document>
     <tdml:documentPart type="byte"><![CDATA[FF 31 32 33]]></tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset>
          <e1>Ã¿123</e1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: encodingErrorReplace
    Schema: ContentFramingProperties-Embedded.dfdl.xsd
    Purpose: This test demonstrates that when the encodingErrorPolicy is "replace" any error when decoding characters
    results in the insertion of the Unicode Replacement Character (U+FFFD) as the replacement for that error.
  -->
  <tdml:parserTestCase name="encodingErrorReplace" root="ee1"
    model="ContentFramingProperties-Embedded.dfdl.xsd" description="Section 11 encoding - DFDL-11-002R">

    <tdml:document>
      <tdml:documentPart type="byte">64ff67</tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <ee1>dï¿½g</ee1>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: encodingNoError
    Schema:    ContentFramingProperties-Embedded.dfdl.xsd
    Root:      ee2
    Purpose:   This test has a 4 byte utf-8 character and no replacement character is needed.
  -->
  <tdml:parserTestCase name="encodingNoError" root="ee2"
    model="ContentFramingProperties-Embedded.dfdl.xsd" description="Section 11 encoding - DFDL-11-002R">

    <tdml:document>
      <tdml:documentPart type="byte">64f09087a167</tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <ee2>dð¡g</ee2>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <!--
    Test name: encodingErrorReplace2
    Schema:    ContentFramingProperties-Embedded.dfdl.xsd
    Root:      ee2
    Purpose:   This test demonstrates that when the encodingErrorPolicy is "replace" any error when decoding characters
        results in the insertion of the Unicode Replacement Character (U+FFFD) as the replacement for that error.
  -->
  <tdml:parserTestCase name="encodingErrorReplace2" root="ee2"
    model="ContentFramingProperties-Embedded.dfdl.xsd" description="Section 11 encoding - DFDL-11-002R">

    <tdml:document>
      <tdml:documentPart type="byte">64f0908767</tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <ee2>dï¿½g</ee2>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>
  
  <!--
    Test name: encodingErrorReplace3
    Schema:    ContentFramingProperties-Embedded.dfdl.xsd
    Root:      ee2
    Purpose:   This test demonstrates that when the encodingErrorPolicy is "replace" any error when decoding characters
        results in the insertion of the Unicode Replacement Character (U+FFFD) as the replacement for that error.
  -->
  <tdml:parserTestCase name="encodingErrorReplace3" root="ee2"
    model="ContentFramingProperties-Embedded.dfdl.xsd" description="Section 11 encoding - DFDL-11-002R">

    <tdml:document>
      <tdml:documentPart type="byte">64c2ff67</tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <ee2>dï¿½ï¿½g</ee2>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

  <!--
    Test name: encodingErrorReplace4
    Schema:    ContentFramingProperties-Embedded.dfdl.xsd
    Root:      ee2
    Purpose:   This test demonstrates that when the encodingErrorPolicy is "replace" any error when decoding characters
        results in the insertion of the Unicode Replacement Character (U+FFFD) as the replacement for that error.
  -->
  <tdml:parserTestCase name="encodingErrorReplace4" root="ee2"
    model="ContentFramingProperties-Embedded.dfdl.xsd" description="Section 11 encoding - DFDL-11-002R">

    <tdml:document>
      <tdml:documentPart type="byte">648067</tdml:documentPart>
    </tdml:document>
    <tdml:infoset>
      <tdml:dfdlInfoset xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <ee2>dï¿½g</ee2>
      </tdml:dfdlInfoset>
    </tdml:infoset>
  </tdml:parserTestCase>

</tdml:testSuite>
